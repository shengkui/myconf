{
	"info": {
		"_postman_id": "e01abc57-9759-42c2-9c5d-67ac217eef50",
		"name": "DIS API",
		"description": "The API to interact with DIS.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20156919"
	},
	"item": [
		{
			"name": "api/v1",
			"item": [
				{
					"name": "Simple Jsons",
					"item": [
						{
							"name": "Connection test",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/SimpleJsons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"SimpleJsons"
									]
								},
								"description": "Used for \"Test connection\" on the dis datasource config page"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SimpleJsons",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SimpleJsons"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "in adipisicing elit "
								}
							]
						},
						{
							"name": "Query data for dashboard",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"format\": \"minim sed Ut\",\n  \"interval\": \"Ut consectetur anim\",\n  \"intervalMs\": -45421423,\n  \"maxDataPoints\": 12662882,\n  \"panelId\": -51778250,\n  \"range\": {\n    \"from\": \"elit id exercitation s\",\n    \"raw\": {\n      \"from\": \"dolore sint\",\n      \"to\": \"Duis nisi sed\"\n    },\n    \"to\": \"ex nisi incididunt id\"\n  },\n  \"rangeRaw\": {\n    \"from\": \"consequat eiusmod\",\n    \"to\": \"in eu\"\n  },\n  \"targets\": [\n    {\n      \"target\": \"qui dolor\",\n      \"type\": \"deserunt ut eu nostrud Lorem\",\n      \"fillMode\": \"nisi eu\",\n      \"refId\": \"cupidatat cillum\"\n    },\n    {\n      \"target\": \"dolore ut aliqua ea\",\n      \"type\": \"id\",\n      \"fillMode\": \"fugiat deserunt aliquip sit enim\",\n      \"refId\": \"labore et amet ullamco\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/SimpleJsons/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"SimpleJsons",
										"query"
									]
								},
								"description": "Query data from dataset or source table\nrequired: target, type"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"format\": \"sint \",\n  \"interval\": \"sed el\",\n  \"intervalMs\": 70203626,\n  \"maxDataPoints\": 49534525,\n  \"panelId\": -49866270,\n  \"range\": {\n    \"from\": \"nisi do eu\",\n    \"raw\": {\n      \"from\": \"ut\",\n      \"to\": \"enim occaecat\"\n    },\n    \"to\": \"eiusmod\"\n  },\n  \"rangeRaw\": {\n    \"from\": \"exercitation eiusmod do\",\n    \"to\": \"dolor irure fugiat cillum Lorem\"\n  },\n  \"targets\": [\n    {\n      \"target\": \"voluptate Duis ex\",\n      \"type\": \"proident ea nisi\",\n      \"fillMode\": \"sunt sed commodo\",\n      \"refId\": \"ex non in aliquip cupidatat\"\n    },\n    {\n      \"target\": \"nostrud ea non deserunt\",\n      \"type\": \"officia fugiat cillum\",\n      \"fillMode\": \"dolor id incididunt\",\n      \"refId\": \"non ex aute in anim\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/SimpleJsons/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SimpleJsons",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the request body is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"format\": \"sint \",\n  \"interval\": \"sed el\",\n  \"intervalMs\": 70203626,\n  \"maxDataPoints\": 49534525,\n  \"panelId\": -49866270,\n  \"range\": {\n    \"from\": \"nisi do eu\",\n    \"raw\": {\n      \"from\": \"ut\",\n      \"to\": \"enim occaecat\"\n    },\n    \"to\": \"eiusmod\"\n  },\n  \"rangeRaw\": {\n    \"from\": \"exercitation eiusmod do\",\n    \"to\": \"dolor irure fugiat cillum Lorem\"\n  },\n  \"targets\": [\n    {\n      \"target\": \"voluptate Duis ex\",\n      \"type\": \"proident ea nisi\",\n      \"fillMode\": \"sunt sed commodo\",\n      \"refId\": \"ex non in aliquip cupidatat\"\n    },\n    {\n      \"target\": \"nostrud ea non deserunt\",\n      \"type\": \"officia fugiat cillum\",\n      \"fillMode\": \"dolor id incididunt\",\n      \"refId\": \"non ex aute in anim\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/SimpleJsons/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SimpleJsons",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"format\": \"sint \",\n  \"interval\": \"sed el\",\n  \"intervalMs\": 70203626,\n  \"maxDataPoints\": 49534525,\n  \"panelId\": -49866270,\n  \"range\": {\n    \"from\": \"nisi do eu\",\n    \"raw\": {\n      \"from\": \"ut\",\n      \"to\": \"enim occaecat\"\n    },\n    \"to\": \"eiusmod\"\n  },\n  \"rangeRaw\": {\n    \"from\": \"exercitation eiusmod do\",\n    \"to\": \"dolor irure fugiat cillum Lorem\"\n  },\n  \"targets\": [\n    {\n      \"target\": \"voluptate Duis ex\",\n      \"type\": \"proident ea nisi\",\n      \"fillMode\": \"sunt sed commodo\",\n      \"refId\": \"ex non in aliquip cupidatat\"\n    },\n    {\n      \"target\": \"nostrud ea non deserunt\",\n      \"type\": \"officia fugiat cillum\",\n      \"fillMode\": \"dolor id incididunt\",\n      \"refId\": \"non ex aute in anim\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/SimpleJsons/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SimpleJsons",
												"query"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "data",
					"item": [
						{
							"name": "Preview data",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"limit\": 100,\n  \"sql\": \"SELECT * FROM `itspend`\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/data/preview",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"data",
										"preview"
									]
								},
								"description": "Preview data from dataset or source table\nrequired: sql, the example of sql string is 'select * from sourceName.schemaName.tablename'"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"limit\": -13323278,\n  \"sql\": \"ut\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/data/preview",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"data",
												"preview"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"limit\": -13323278,\n  \"sql\": \"ut\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/data/preview",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"data",
												"preview"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Query data",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sql\": \"SELECT * FROM `itspend` LIMIT 500\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/data/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"data",
										"query"
									]
								},
								"description": "Query data from dataset or source table\nrequired: sql, the example of sql string is 'select * from sourceName.schemaName.tablename'"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sql\": \"in adi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/data/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"data",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sql\": \"in adi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/data/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"data",
												"query"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "dataset",
					"item": [
						{
							"name": "{dataset Id}",
							"item": [
								{
									"name": "increment",
									"item": [
										{
											"name": "Get incremental config of dataset",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"increment"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "",
															"description": "(Required) dataset's id"
														}
													]
												},
												"description": "Get incremental config by dataset ID"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"increment"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "store or get data from database failed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"increment"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add incremental config of dataset",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"boundary\": \"pariatur elit consequat \",\n  \"columnName\": \"adipisicing\",\n  \"type\": \"ad\",\n  \"condition\": \"Duis Ut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"increment"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "",
															"description": "(Required) dataset's id"
														}
													]
												},
												"description": "Add incremental config by dataset ID"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"increment"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "get incremental preview failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"increment"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get incremental preview of dataset",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"boundary\": \"pariatur elit consequat \",\n  \"columnName\": \"adipisicing\",\n  \"type\": \"ad\",\n  \"condition\": \"Duis Ut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment/preview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"increment",
														"preview"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "",
															"description": "(Required) dataset's id"
														}
													]
												},
												"description": "Get incremental preview by dataset ID"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"increment",
																"preview"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "get incremental preview failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/increment/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"increment",
																"preview"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "task",
									"item": [
										{
											"name": "{task Id}",
											"item": [
												{
													"name": "Get task list of dataset",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "<API Key>",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId?page=-4454345&size=-4454345",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task",
																":taskId"
															],
															"query": [
																{
																	"key": "page",
																	"value": "-4454345",
																	"description": "the number of pages"
																},
																{
																	"key": "size",
																	"value": "-4454345",
																	"description": "number per page"
																}
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "",
																	"description": "(Required) dataset's id"
																},
																{
																	"key": "taskId",
																	"value": "",
																	"description": "(Required) task's id"
																}
															]
														},
														"description": "Get tasks by dataset ID"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId?page=-4454345&size=-4454345",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "-4454345"
																		},
																		{
																			"key": "size",
																			"value": "-4454345"
																		}
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "store or get data from database failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId?page=-4454345&size=-4454345",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "-4454345"
																		},
																		{
																			"key": "size",
																			"value": "-4454345"
																		}
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a single task of dataset",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "<API Key>",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task",
																":taskId"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																},
																{
																	"key": "taskId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) task's id"
																}
															]
														},
														"description": "Delete task by datasetId & taskId"
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "dataset id was not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "store or get data from database failed",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Edit a single task of dataset",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "<API Key>",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cronExpression\": \"dolor\",\n  \"custom\": {},\n  \"endTime\": \"Excepteur reprehenderit\",\n  \"increment\": {\n    \"boundary\": \"fugiat ex nulla elit\",\n    \"columnName\": \"amet\",\n    \"condition\": \"dolor consequat dolor Duis in\",\n    \"type\": \"ut culpa\"\n  },\n  \"setting\": {},\n  \"startTime\": \"\",\n  \"taskName\": \"magna aute sint id\",\n  \"updateType\": \"Excepteur\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task",
																":taskId"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																},
																{
																	"key": "taskId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) task's id"
																}
															]
														},
														"description": "Edit task of dataset by datasetId & tastId"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cronExpression\": \"dolor\",\n  \"custom\": {},\n  \"endTime\": \"Excepteur reprehenderit\",\n  \"increment\": {\n    \"boundary\": \"fugiat ex nulla elit\",\n    \"columnName\": \"amet\",\n    \"condition\": \"dolor consequat dolor Duis in\",\n    \"type\": \"ut culpa\"\n  },\n  \"setting\": {},\n  \"startTime\": \"\",\n  \"taskName\": \"magna aute sint id\",\n  \"updateType\": \"Excepteur\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "the request body parameter is invalid",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cronExpression\": \"dolor\",\n  \"custom\": {},\n  \"endTime\": \"Excepteur reprehenderit\",\n  \"increment\": {\n    \"boundary\": \"fugiat ex nulla elit\",\n    \"columnName\": \"amet\",\n    \"condition\": \"dolor consequat dolor Duis in\",\n    \"type\": \"ut culpa\"\n  },\n  \"setting\": {},\n  \"startTime\": \"\",\n  \"taskName\": \"magna aute sint id\",\n  \"updateType\": \"Excepteur\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "task id was not found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cronExpression\": \"dolor\",\n  \"custom\": {},\n  \"endTime\": \"Excepteur reprehenderit\",\n  \"increment\": {\n    \"boundary\": \"fugiat ex nulla elit\",\n    \"columnName\": \"amet\",\n    \"condition\": \"dolor consequat dolor Duis in\",\n    \"type\": \"ut culpa\"\n  },\n  \"setting\": {},\n  \"startTime\": \"\",\n  \"taskName\": \"magna aute sint id\",\n  \"updateType\": \"Excepteur\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "the task name already exists",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cronExpression\": \"dolor\",\n  \"custom\": {},\n  \"endTime\": \"Excepteur reprehenderit\",\n  \"increment\": {\n    \"boundary\": \"fugiat ex nulla elit\",\n    \"columnName\": \"amet\",\n    \"condition\": \"dolor consequat dolor Duis in\",\n    \"type\": \"ut culpa\"\n  },\n  \"setting\": {},\n  \"startTime\": \"\",\n  \"taskName\": \"magna aute sint id\",\n  \"updateType\": \"Excepteur\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "store or get data from database failed",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cronExpression\": \"dolor\",\n  \"custom\": {},\n  \"endTime\": \"Excepteur reprehenderit\",\n  \"increment\": {\n    \"boundary\": \"fugiat ex nulla elit\",\n    \"columnName\": \"amet\",\n    \"condition\": \"dolor consequat dolor Duis in\",\n    \"type\": \"ut culpa\"\n  },\n  \"setting\": {},\n  \"startTime\": \"\",\n  \"taskName\": \"magna aute sint id\",\n  \"updateType\": \"Excepteur\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"dataset",
																		":datasetId",
																		"task",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "datasetId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) dataset's id"
																		},
																		{
																			"key": "taskId",
																			"value": "in adipisicing elit ",
																			"description": "(Required) task's id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get task list of dataset",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task?taskName=in adipisicing elit &page=-4454345&size=-4454345",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"task"
													],
													"query": [
														{
															"key": "taskName",
															"value": "in adipisicing elit ",
															"description": "task's name"
														},
														{
															"key": "page",
															"value": "-4454345",
															"description": "the number of pages"
														},
														{
															"key": "size",
															"value": "-4454345",
															"description": "number per page"
														}
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												},
												"description": "Get tasks by dataset ID"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task?taskName=in adipisicing elit &page=-4454345&size=-4454345",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task"
															],
															"query": [
																{
																	"key": "taskName",
																	"value": "in adipisicing elit "
																},
																{
																	"key": "page",
																	"value": "-4454345"
																},
																{
																	"key": "size",
																	"value": "-4454345"
																}
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "store or get data from database failed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task?taskName=in adipisicing elit &page=-4454345&size=-4454345",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task"
															],
															"query": [
																{
																	"key": "taskName",
																	"value": "in adipisicing elit "
																},
																{
																	"key": "page",
																	"value": "-4454345"
																},
																{
																	"key": "size",
																	"value": "-4454345"
																}
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add a single task of dataset",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"items\": [\n    {\n      \"cronExpression\": \"nisi magna\",\n      \"taskName\": \"ex sit id in\",\n      \"updateType\": \"sit Excepteur cillum cons\",\n      \"custom\": {},\n      \"endTime\": \"est veniam elit cillum\",\n      \"increment\": {\n        \"boundary\": \"in ad\",\n        \"columnName\": \"minim ullamco tempor\",\n        \"condition\": \"adipisicing nostrud ipsum quis cupidatat\",\n        \"type\": \"pariatur\"\n      },\n      \"setting\": {},\n      \"startTime\": \"Duis aliquip irure enim sint\",\n      \"variables\": {}\n    },\n    {\n      \"cronExpression\": \"cupidatat sunt eiusmod\",\n      \"taskName\": \"in ad est\",\n      \"updateType\": \"nulla cup\",\n      \"custom\": {},\n      \"endTime\": \"esse nostrud\",\n      \"increment\": {\n        \"boundary\": \"Lorem aliqu\",\n        \"columnName\": \"ut nostrud cillum\",\n        \"condition\": \"amet est ullamco aliquip\",\n        \"type\": \"Excepteur ut enim\"\n      },\n      \"setting\": {},\n      \"startTime\": \"ad in nulla\",\n      \"variables\": {}\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"task"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												},
												"description": "Add task"
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"items\": [\n    {\n      \"cronExpression\": \"elit\",\n      \"taskName\": \"commodo\",\n      \"updateType\": \"dolor ex commodo\",\n      \"custom\": {},\n      \"endTime\": \"Ut \",\n      \"increment\": {\n        \"boundary\": \"nulla dolore aute\",\n        \"columnName\": \"anim cupidatat\",\n        \"condition\": \"commodo officia\",\n        \"type\": \"ipsum eiusmod cupidatat\"\n      },\n      \"setting\": {},\n      \"startTime\": \"pariatur sunt incididunt et\",\n      \"variables\": {}\n    },\n    {\n      \"cronExpression\": \"dolor \",\n      \"taskName\": \"commodo ulla\",\n      \"updateType\": \"ad sint incididunt veniam\",\n      \"custom\": {},\n      \"endTime\": \"fugiat Duis ut\",\n      \"increment\": {\n        \"boundary\": \"est sed officia ad\",\n        \"columnName\": \"ut id nisi proident\",\n        \"condition\": \"ipsum enim\",\n        \"type\": \"cillum sint officia eiusmod\"\n      },\n      \"setting\": {},\n      \"startTime\": \"Excepteur nostrud ut cillum quis\",\n      \"variables\": {}\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "the task of this dataset already exists",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"items\": [\n    {\n      \"cronExpression\": \"elit\",\n      \"taskName\": \"commodo\",\n      \"updateType\": \"dolor ex commodo\",\n      \"custom\": {},\n      \"endTime\": \"Ut \",\n      \"increment\": {\n        \"boundary\": \"nulla dolore aute\",\n        \"columnName\": \"anim cupidatat\",\n        \"condition\": \"commodo officia\",\n        \"type\": \"ipsum eiusmod cupidatat\"\n      },\n      \"setting\": {},\n      \"startTime\": \"pariatur sunt incididunt et\",\n      \"variables\": {}\n    },\n    {\n      \"cronExpression\": \"dolor \",\n      \"taskName\": \"commodo ulla\",\n      \"updateType\": \"ad sint incididunt veniam\",\n      \"custom\": {},\n      \"endTime\": \"fugiat Duis ut\",\n      \"increment\": {\n        \"boundary\": \"est sed officia ad\",\n        \"columnName\": \"ut id nisi proident\",\n        \"condition\": \"ipsum enim\",\n        \"type\": \"cillum sint officia eiusmod\"\n      },\n      \"setting\": {},\n      \"startTime\": \"Excepteur nostrud ut cillum quis\",\n      \"variables\": {}\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "store or get data from database failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"items\": [\n    {\n      \"cronExpression\": \"elit\",\n      \"taskName\": \"commodo\",\n      \"updateType\": \"dolor ex commodo\",\n      \"custom\": {},\n      \"endTime\": \"Ut \",\n      \"increment\": {\n        \"boundary\": \"nulla dolore aute\",\n        \"columnName\": \"anim cupidatat\",\n        \"condition\": \"commodo officia\",\n        \"type\": \"ipsum eiusmod cupidatat\"\n      },\n      \"setting\": {},\n      \"startTime\": \"pariatur sunt incididunt et\",\n      \"variables\": {}\n    },\n    {\n      \"cronExpression\": \"dolor \",\n      \"taskName\": \"commodo ulla\",\n      \"updateType\": \"ad sint incididunt veniam\",\n      \"custom\": {},\n      \"endTime\": \"fugiat Duis ut\",\n      \"increment\": {\n        \"boundary\": \"est sed officia ad\",\n        \"columnName\": \"ut id nisi proident\",\n        \"condition\": \"ipsum enim\",\n        \"type\": \"cillum sint officia eiusmod\"\n      },\n      \"setting\": {},\n      \"startTime\": \"Excepteur nostrud ut cillum quis\",\n      \"variables\": {}\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Enable task/tasks",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"items\": [\n    {\n      \"enable\": false,\n      \"taskName\": \"pariatu\"\n    },\n    {\n      \"enable\": false,\n      \"taskName\": \"d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"task",
														"enable"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												},
												"description": "Enable task\nrequired: groupId, datasetName, config, type, sql"
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"items\": [\n    {\n      \"enable\": true,\n      \"taskName\": \"pariatur dolore reprehend\"\n    },\n    {\n      \"enable\": false,\n      \"taskName\": \"minim aliqua eu a\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task",
																"enable"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "store or get data from database failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"items\": [\n    {\n      \"enable\": true,\n      \"taskName\": \"pariatur dolore reprehend\"\n    },\n    {\n      \"enable\": false,\n      \"taskName\": \"minim aliqua eu a\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/task/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"dataset",
																":datasetId",
																"task",
																"enable"
															],
															"variable": [
																{
																	"key": "datasetId",
																	"value": "in adipisicing elit ",
																	"description": "(Required) dataset's id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get a single dataset",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												":datasetId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "in adipisicing elit ",
													"description": "(Required) dataset's id"
												}
											]
										},
										"description": "Get dataset by datasetId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "dataset id was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a single dataset",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												":datasetId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "in adipisicing elit ",
													"description": "(Required) dataset's id"
												}
											]
										},
										"description": "Delete dataset by datasetId"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "dataset id was not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Edit a single Dataset",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"datasetName\": \"qui sed do\",\n  \"groupId\": \"offici\",\n  \"oriSql\": \"et\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												":datasetId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "in adipisicing elit ",
													"description": "(Required) dataset's id"
												}
											]
										},
										"description": "Edit dataset by datasetId"
									},
									"response": [
										{
											"name": "Accepted",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"datasetName\": \"qui sed do\",\n  \"groupId\": \"offici\",\n  \"oriSql\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the request body parameter is invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"datasetName\": \"qui sed do\",\n  \"groupId\": \"offici\",\n  \"oriSql\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "dataset id was not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"datasetName\": \"qui sed do\",\n  \"groupId\": \"offici\",\n  \"oriSql\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the dataset name already exists",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"datasetName\": \"qui sed do\",\n  \"groupId\": \"offici\",\n  \"oriSql\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"datasetName\": \"qui sed do\",\n  \"groupId\": \"offici\",\n  \"oriSql\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId"
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get task records of dataset",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/record?taskName=in adipisicing elit &page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												":datasetId",
												"record"
											],
											"query": [
												{
													"key": "taskName",
													"value": "in adipisicing elit ",
													"description": "taskName"
												},
												{
													"key": "page",
													"value": "-4454345",
													"description": "the number of pages"
												},
												{
													"key": "size",
													"value": "-4454345",
													"description": "number per page"
												}
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "in adipisicing elit ",
													"description": "(Required) dataset's id"
												}
											]
										},
										"description": "Get task record by dataset ID"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/record?taskName=in adipisicing elit &page=-4454345&size=-4454345",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"record"
													],
													"query": [
														{
															"key": "taskName",
															"value": "in adipisicing elit "
														},
														{
															"key": "page",
															"value": "-4454345"
														},
														{
															"key": "size",
															"value": "-4454345"
														}
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/record?taskName=in adipisicing elit &page=-4454345&size=-4454345",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"record"
													],
													"query": [
														{
															"key": "taskName",
															"value": "in adipisicing elit "
														},
														{
															"key": "page",
															"value": "-4454345"
														},
														{
															"key": "size",
															"value": "-4454345"
														}
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get schema of dataset",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/schema?columnType=in adipisicing elit ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												":datasetId",
												"schema"
											],
											"query": [
												{
													"key": "columnType",
													"value": "in adipisicing elit ",
													"description": "columnType"
												}
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "in adipisicing elit ",
													"description": "(Required) dataset's id"
												}
											]
										},
										"description": "Get schema by dataset ID"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/schema?columnType=in adipisicing elit ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"schema"
													],
													"query": [
														{
															"key": "columnType",
															"value": "in adipisicing elit "
														}
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get schema from dataset failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/dataset/:datasetId/schema?columnType=in adipisicing elit ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"dataset",
														":datasetId",
														"schema"
													],
													"query": [
														{
															"key": "columnType",
															"value": "in adipisicing elit "
														}
													],
													"variable": [
														{
															"key": "datasetId",
															"value": "in adipisicing elit ",
															"description": "(Required) dataset's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get dataset list",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dataset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dataset"
									],
									"query": [
										{
											"key": "groupId",
											"value": "dis",
											"description": "group's id",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "the number of pages",
											"disabled": true
										},
										{
											"key": "size",
											"value": "5",
											"description": "number per page",
											"disabled": true
										}
									]
								},
								"description": "Get datasets by group ID"
							},
							"response": []
						},
						{
							"name": "Add a single dataset",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetName\": \"tempor\",\n  \"groupId\": \"in et Lo\",\n  \"oriSql\": \"id nulla\",\n  \"datasetId\": \"labore do\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dataset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dataset"
									]
								},
								"description": "Add dataset\nrequired: datasetName, groupId, oriSql"
							},
							"response": [
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"datasetName\": \"tempor\",\n  \"groupId\": \"in et Lo\",\n  \"oriSql\": \"id nulla\",\n  \"datasetId\": \"labore do\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the dataset already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"datasetName\": \"tempor\",\n  \"groupId\": \"in et Lo\",\n  \"oriSql\": \"id nulla\",\n  \"datasetId\": \"labore do\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"datasetName\": \"tempor\",\n  \"groupId\": \"in et Lo\",\n  \"oriSql\": \"id nulla\",\n  \"datasetId\": \"labore do\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Datasets",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"items\": [\n    {\n      \"datasetId\": \"nostrud ad laboris\",\n      \"updateType\": \"veniam eiusm\",\n      \"variables\": {}\n    },\n    {\n      \"datasetId\": \"dolore\",\n      \"updateType\": \"sed exercitation et consectetur\",\n      \"variables\": {}\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dataset/update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dataset",
										"update"
									]
								},
								"description": "Update datasets"
							},
							"response": [
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"datasetId\": \"velit esse dolor pariatur\",\n      \"updateType\": \"ut enim\",\n      \"variables\": {}\n    },\n    {\n      \"datasetId\": \"commodo ullamco deserunt\",\n      \"updateType\": \"est id dolore \",\n      \"variables\": {}\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												"update"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the request body parameter is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"datasetId\": \"velit esse dolor pariatur\",\n      \"updateType\": \"ut enim\",\n      \"variables\": {}\n    },\n    {\n      \"datasetId\": \"commodo ullamco deserunt\",\n      \"updateType\": \"est id dolore \",\n      \"variables\": {}\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												"update"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "update dataset failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"datasetId\": \"velit esse dolor pariatur\",\n      \"updateType\": \"ut enim\",\n      \"variables\": {}\n    },\n    {\n      \"datasetId\": \"commodo ullamco deserunt\",\n      \"updateType\": \"est id dolore \",\n      \"variables\": {}\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/dataset/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"dataset",
												"update"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "event",
					"item": [
						{
							"name": "Get event list",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/event?page=-4454345&size=-4454345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"event"
									],
									"query": [
										{
											"key": "page",
											"value": "-4454345",
											"description": "the number of pages"
										},
										{
											"key": "size",
											"value": "-4454345",
											"description": "number per page"
										}
									]
								},
								"description": "Get event"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/event?page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"event"
											],
											"query": [
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/event?page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"event"
											],
											"query": [
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "UserInfo update event read status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventId\": 59103036\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/event/read",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"event",
										"read"
									]
								},
								"description": "UserInfo event read"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventId\": 59103036\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/event/read",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"event",
												"read"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventId\": 59103036\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/event/read",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"event",
												"read"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get event unread count",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/event/unreadCount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"event",
										"unreadCount"
									]
								},
								"description": "Get event unread count"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/event/unreadCount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"event",
												"unreadCount"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "group",
					"item": [
						{
							"name": "{group Id}",
							"item": [
								{
									"name": "Get a single group",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/group/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "in adipisicing elit ",
													"description": "(Required) group's id"
												}
											]
										},
										"description": "Get group by groupId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "group id was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a single group",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/group/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "in adipisicing elit ",
													"description": "(Required) group's id"
												}
											]
										},
										"description": "Delete group by groupId"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "group id was not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Edit a single group",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupName\": \"\",\n  \"parentGroupId\": \"in molli\",\n  \"type\": \"sint anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/group/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "in adipisicing elit ",
													"description": "(Required) group's id"
												}
											]
										},
										"description": "Edit group by groupId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupName\": \"\",\n  \"parentGroupId\": \"in molli\",\n  \"type\": \"sint anim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "group id was not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupName\": \"\",\n  \"parentGroupId\": \"in molli\",\n  \"type\": \"sint anim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the group name already exists",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupName\": \"\",\n  \"parentGroupId\": \"in molli\",\n  \"type\": \"sint anim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupName\": \"\",\n  \"parentGroupId\": \"in molli\",\n  \"type\": \"sint anim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "in adipisicing elit ",
															"description": "(Required) group's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all groups",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"group"
									],
									"query": [
										{
											"key": "type",
											"value": "in adipisicing elit ",
											"description": "group type: dataset or udf",
											"disabled": true
										},
										{
											"key": "page",
											"value": "-4454345",
											"description": "the number of pages",
											"disabled": true
										},
										{
											"key": "size",
											"value": "-4454345",
											"description": "number per page",
											"disabled": true
										}
									]
								},
								"description": "Get the group list"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/group?type=in adipisicing elit &page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group"
											],
											"query": [
												{
													"key": "type",
													"value": "in adipisicing elit "
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/group?type=in adipisicing elit &page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group"
											],
											"query": [
												{
													"key": "type",
													"value": "in adipisicing elit "
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a single group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\": \"irure fugiat d\",\n  \"type\": \"magna est quis dolore\",\n  \"parentGroupId\": \"lab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"group"
									]
								},
								"description": "Add group\nrequired: groupName, type"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupName\": \"irure fugiat d\",\n  \"type\": \"magna est quis dolore\",\n  \"parentGroupId\": \"lab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the group already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupName\": \"irure fugiat d\",\n  \"type\": \"magna est quis dolore\",\n  \"parentGroupId\": \"lab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupName\": \"irure fugiat d\",\n  \"type\": \"magna est quis dolore\",\n  \"parentGroupId\": \"lab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"group"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "org",
					"item": [
						{
							"name": "{org Id}",
							"item": [
								{
									"name": "Get a single org",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/org/:orgId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org",
												":orgId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "in adipisicing elit ",
													"description": "(Required) org's id"
												}
											]
										},
										"description": "Get org by orgId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "org id was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a single org",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/org/:orgId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org",
												":orgId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "in adipisicing elit ",
													"description": "(Required) org's id"
												}
											]
										},
										"description": "Delete org by orgId"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "org id was not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Edit a single org",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Lorem Excepteur in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org/:orgId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org",
												":orgId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "in adipisicing elit ",
													"description": "(Required) org's id"
												}
											]
										},
										"description": "Edit org by orgId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Lorem Excepteur in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the request body parameter is invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Lorem Excepteur in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "org id was not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Lorem Excepteur in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Lorem Excepteur in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/org/:orgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"org",
														":orgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "in adipisicing elit ",
															"description": "(Required) org's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all orgs",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "the number of pages",
											"disabled": true
										},
										{
											"key": "size",
											"value": "10",
											"description": "number per page",
											"disabled": true
										}
									]
								},
								"description": "Get all orgs"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/org?page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											],
											"query": [
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/org?page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											],
											"query": [
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a single org",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orgName\": \"nostrud qui dolore\",\n  \"description\": \"id\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								},
								"description": "Add org\nrequired: orgName"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orgName\": \"nostrud qui dolore\",\n  \"description\": \"id\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the org already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orgName\": \"nostrud qui dolore\",\n  \"description\": \"id\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orgName\": \"nostrud qui dolore\",\n  \"description\": \"id\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete org by ids",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"incididunt anim cupidatat ut sunt\",\n  \"tempor dolore non eiusmod\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								},
								"description": "Batch delete org"
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"consectetur ad Ut aute\",\n  \"Duis dolor mollit\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"consectetur ad Ut aute\",\n  \"Duis dolor mollit\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"org"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "source",
					"item": [
						{
							"name": "{source Id}",
							"item": [
								{
									"name": "Get a single source",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/source/:sourceId?detail=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source",
												":sourceId"
											],
											"query": [
												{
													"key": "detail",
													"value": "false",
													"description": "show catalog or not. if true, show catalog"
												}
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "in adipisicing elit ",
													"description": "(Required) source's id"
												}
											]
										},
										"description": "Get source by sourceId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId?detail=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"query": [
														{
															"key": "detail",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "source id was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId?detail=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"query": [
														{
															"key": "detail",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId?detail=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"query": [
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a single source",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/source/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "in adipisicing elit ",
													"description": "(Required) source's id"
												}
											]
										},
										"description": "Delete source by sourceId"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "source id was not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Edit a single Source",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {},\n  \"sourceName\": \"culpa laborum ut do amet\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/source/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "in adipisicing elit ",
													"description": "(Required) source's id"
												}
											]
										},
										"description": "Edit source by sourceId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {},\n  \"sourceName\": \"culpa laborum ut do amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the request body parameter is invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {},\n  \"sourceName\": \"culpa laborum ut do amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "source id was not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {},\n  \"sourceName\": \"culpa laborum ut do amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the source name already exists",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {},\n  \"sourceName\": \"culpa laborum ut do amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {},\n  \"sourceName\": \"culpa laborum ut do amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/source/:sourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"source",
														":sourceId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "in adipisicing elit ",
															"description": "(Required) source's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get source list",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/source",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"source"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "the number of pages",
											"disabled": true
										},
										{
											"key": "size",
											"value": "10",
											"description": "number per page",
											"disabled": true
										}
									]
								},
								"description": "Get sources list by org ID"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/source?page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source"
											],
											"query": [
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/source?page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source"
											],
											"query": [
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a single source",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {},\n  \"sourceName\": \"csv123\",\n  \"type\": \"csv\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/source",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"source"
									]
								},
								"description": "Add source\nrequired: sourceName, config, type\nthe available values of type are: postgresql, oracle, mysql, sqlserver, mongodb, influxdb, denodo, sap-hana, json, csv, http, soap"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {},\n  \"sourceName\": \"magna ad\",\n  \"type\": \"do esse exercitation\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/source",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the source already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {},\n  \"sourceName\": \"magna ad\",\n  \"type\": \"do esse exercitation\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/source",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {},\n  \"sourceName\": \"magna ad\",\n  \"type\": \"do esse exercitation\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/source",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"source"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "udf",
					"item": [
						{
							"name": "{udf Id}",
							"item": [
								{
									"name": "Get a single udf",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf/:udfId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf",
												":udfId"
											],
											"variable": [
												{
													"key": "udfId",
													"value": "in adipisicing elit ",
													"description": "(Required) udf's id"
												}
											]
										},
										"description": "Get udf by udfId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "udf id is null",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a single udf",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf/:udfId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf",
												":udfId"
											],
											"variable": [
												{
													"key": "udfId",
													"value": "in adipisicing elit ",
													"description": "(Required) udf's id"
												}
											]
										},
										"description": "Delete udf by udfId"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "udf id was not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Edit a single udf",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"culpa\",\n  \"description\": \"laboris conse\",\n  \"groupId\": \"est\",\n  \"name\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf/:udfId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf",
												":udfId"
											],
											"variable": [
												{
													"key": "udfId",
													"value": "in adipisicing elit ",
													"description": "(Required) udf's id"
												}
											]
										},
										"description": "Edit udf by udfId"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"culpa\",\n  \"description\": \"laboris conse\",\n  \"groupId\": \"est\",\n  \"name\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the request body parameter is invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"culpa\",\n  \"description\": \"laboris conse\",\n  \"groupId\": \"est\",\n  \"name\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the udf name already exists",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"culpa\",\n  \"description\": \"laboris conse\",\n  \"groupId\": \"est\",\n  \"name\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from udf failed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"culpa\",\n  \"description\": \"laboris conse\",\n  \"groupId\": \"est\",\n  \"name\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/udf/:udfId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"udf",
														":udfId"
													],
													"variable": [
														{
															"key": "udfId",
															"value": "in adipisicing elit ",
															"description": "(Required) udf's id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get udf list",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/udf",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"udf"
									],
									"query": [
										{
											"key": "groupId",
											"value": "in adipisicing elit ",
											"description": "group's id",
											"disabled": true
										},
										{
											"key": "udfName",
											"value": "in adipisicing elit ",
											"description": "udf name",
											"disabled": true
										},
										{
											"key": "page",
											"value": "-4454345",
											"description": "the number of pages",
											"disabled": true
										},
										{
											"key": "size",
											"value": "-4454345",
											"description": "number per page",
											"disabled": true
										}
									]
								},
								"description": "Get udfs by group ID, udf Name"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf?groupId=in adipisicing elit &udfName=in adipisicing elit &page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf"
											],
											"query": [
												{
													"key": "groupId",
													"value": "in adipisicing elit "
												},
												{
													"key": "udfName",
													"value": "in adipisicing elit "
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf?groupId=in adipisicing elit &udfName=in adipisicing elit &page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf"
											],
											"query": [
												{
													"key": "groupId",
													"value": "in adipisicing elit "
												},
												{
													"key": "udfName",
													"value": "in adipisicing elit "
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a single udf",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"incididunt\",\n  \"groupId\": \"amet incid\",\n  \"kind\": \"Lorem et est\",\n  \"name\": \"cu\",\n  \"type\": \"sint\",\n  \"udfName\": \"eiusmod nisi labo\",\n  \"description\": \"qui quis mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/udf",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"udf"
									]
								},
								"description": "Add udf\nrequired: udfName, name, description, kind, code, groupId, type"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"incididunt\",\n  \"groupId\": \"amet incid\",\n  \"kind\": \"Lorem et est\",\n  \"name\": \"cu\",\n  \"type\": \"sint\",\n  \"udfName\": \"eiusmod nisi labo\",\n  \"description\": \"qui quis mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the udf already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"incididunt\",\n  \"groupId\": \"amet incid\",\n  \"kind\": \"Lorem et est\",\n  \"name\": \"cu\",\n  \"type\": \"sint\",\n  \"udfName\": \"eiusmod nisi labo\",\n  \"description\": \"qui quis mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"incididunt\",\n  \"groupId\": \"amet incid\",\n  \"kind\": \"Lorem et est\",\n  \"name\": \"cu\",\n  \"type\": \"sint\",\n  \"udfName\": \"eiusmod nisi labo\",\n  \"description\": \"qui quis mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Try run a single udf/udaf code",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"ea in ad\",\n  \"kind\": \"deserunt labore do\",\n  \"type\": \"si\",\n  \"udfName\": \"Exc\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/udf/try",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"udf",
										"try"
									]
								},
								"description": "Try run udf/udaf\nrequired: udfName, kind, code, type"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"ea in ad\",\n  \"kind\": \"deserunt labore do\",\n  \"type\": \"si\",\n  \"udfName\": \"Exc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf/try",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf",
												"try"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "equest param's error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"ea in ad\",\n  \"kind\": \"deserunt labore do\",\n  \"type\": \"si\",\n  \"udfName\": \"Exc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf/try",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf",
												"try"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "internal error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"ea in ad\",\n  \"kind\": \"deserunt labore do\",\n  \"type\": \"si\",\n  \"udfName\": \"Exc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/udf/try",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"udf",
												"try"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "me",
							"item": [
								{
									"name": "Get the specified user information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"me"
											]
										},
										"description": "Get the specified user information."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "user was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "switch current org",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orgId\": \"et\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/me/switchOrg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"me",
												"switchOrg"
											]
										},
										"description": "switch current org"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orgId\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me/switchOrg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me",
														"switchOrg"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the request body parameter is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orgId\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me/switchOrg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me",
														"switchOrg"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "username was not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orgId\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me/switchOrg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me",
														"switchOrg"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orgId\": \"et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/me/switchOrg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"me",
														"switchOrg"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{user Name}",
							"item": [
								{
									"name": "Get the specified user information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:userName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":userName"
											],
											"variable": [
												{
													"key": "userName",
													"value": "in adipisicing elit ",
													"description": "(Required) user's name"
												}
											]
										},
										"description": "Get the specified user information."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "user was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete the user by username.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:userName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":userName"
											],
											"variable": [
												{
													"key": "userName",
													"value": "in adipisicing elit ",
													"description": "(Required) user's name"
												}
											]
										},
										"description": "Delete the user by username."
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "user was not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Edit a single user.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"pariatur do\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"in\",\n      \"roleId\": \"officia sit sunt laborum consectetur\"\n    },\n    {\n      \"orgId\": \"pariatur ut\",\n      \"roleId\": \"in o\"\n    }\n  ],\n  \"systemAdmin\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:userName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":userName"
											],
											"variable": [
												{
													"key": "userName",
													"value": "in adipisicing elit ",
													"description": "(Required) user's name"
												}
											]
										},
										"description": "Create user by username."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam in nisi\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"sed id\",\n      \"roleId\": \"ad\"\n    },\n    {\n      \"orgId\": \"cupidatat sint \",\n      \"roleId\": \"do\"\n    }\n  ],\n  \"systemAdmin\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the request body parameter is invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam in nisi\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"sed id\",\n      \"roleId\": \"ad\"\n    },\n    {\n      \"orgId\": \"cupidatat sint \",\n      \"roleId\": \"do\"\n    }\n  ],\n  \"systemAdmin\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "username was not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam in nisi\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"sed id\",\n      \"roleId\": \"ad\"\n    },\n    {\n      \"orgId\": \"cupidatat sint \",\n      \"roleId\": \"do\"\n    }\n  ],\n  \"systemAdmin\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "the username already exists",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam in nisi\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"sed id\",\n      \"roleId\": \"ad\"\n    },\n    {\n      \"orgId\": \"cupidatat sint \",\n      \"roleId\": \"do\"\n    }\n  ],\n  \"systemAdmin\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "store or get data from database failed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam in nisi\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"sed id\",\n      \"roleId\": \"ad\"\n    },\n    {\n      \"orgId\": \"cupidatat sint \",\n      \"roleId\": \"do\"\n    }\n  ],\n  \"systemAdmin\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":userName"
													],
													"variable": [
														{
															"key": "userName",
															"value": "in adipisicing elit ",
															"description": "(Required) user's name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List the user information.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user?userName=in adipisicing elit &orgId=in adipisicing elit &sortby=in adipisicing elit &desc=true&page=-4454345&size=-4454345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									],
									"query": [
										{
											"key": "userName",
											"value": "in adipisicing elit ",
											"description": "userName"
										},
										{
											"key": "orgId",
											"value": "in adipisicing elit ",
											"description": "org's id"
										},
										{
											"key": "sortby",
											"value": "in adipisicing elit ",
											"description": "Sort by the specified property"
										},
										{
											"key": "desc",
											"value": "true",
											"description": "Order by desc or not"
										},
										{
											"key": "page",
											"value": "-4454345",
											"description": "Pagination"
										},
										{
											"key": "size",
											"value": "-4454345",
											"description": "Page size"
										}
									]
								},
								"description": "List the user information."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?userName=in adipisicing elit &orgId=in adipisicing elit &sortby=in adipisicing elit &desc=true&page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "userName",
													"value": "in adipisicing elit "
												},
												{
													"key": "orgId",
													"value": "in adipisicing elit "
												},
												{
													"key": "sortby",
													"value": "in adipisicing elit "
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "user was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?userName=in adipisicing elit &orgId=in adipisicing elit &sortby=in adipisicing elit &desc=true&page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "userName",
													"value": "in adipisicing elit "
												},
												{
													"key": "orgId",
													"value": "in adipisicing elit "
												},
												{
													"key": "sortby",
													"value": "in adipisicing elit "
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?userName=in adipisicing elit &orgId=in adipisicing elit &sortby=in adipisicing elit &desc=true&page=-4454345&size=-4454345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "userName",
													"value": "in adipisicing elit "
												},
												{
													"key": "orgId",
													"value": "in adipisicing elit "
												},
												{
													"key": "sortby",
													"value": "in adipisicing elit "
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "page",
													"value": "-4454345"
												},
												{
													"key": "size",
													"value": "-4454345"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new user.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"adipisicing anim sed eu fugiat\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"commodo laboris\",\n      \"roleId\": \"ut mollit do\"\n    },\n    {\n      \"orgId\": \"anim laborum\",\n      \"roleId\": \"Duis\"\n    }\n  ],\n  \"systemAdmin\": false,\n  \"userName\": \"elit ipsum consectetur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								},
								"description": "Create a new user."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"sit\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"Ut ipsum\",\n      \"roleId\": \"laboris anim sint\"\n    },\n    {\n      \"orgId\": \"et sit\",\n      \"roleId\": \"dolor dolore anim cillum\"\n    }\n  ],\n  \"systemAdmin\": true,\n  \"userName\": \"occaecat proident ipsum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "the user already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"sit\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"Ut ipsum\",\n      \"roleId\": \"laboris anim sint\"\n    },\n    {\n      \"orgId\": \"et sit\",\n      \"roleId\": \"dolor dolore anim cillum\"\n    }\n  ],\n  \"systemAdmin\": true,\n  \"userName\": \"occaecat proident ipsum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"sit\",\n  \"orgRole\": [\n    {\n      \"orgId\": \"Ut ipsum\",\n      \"roleId\": \"laboris anim sint\"\n    },\n    {\n      \"orgId\": \"et sit\",\n      \"roleId\": \"dolor dolore anim cillum\"\n    }\n  ],\n  \"systemAdmin\": true,\n  \"userName\": \"occaecat proident ipsum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the users by username.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"incididunt anim cupidatat ut sunt\",\n  \"tempor dolore non eiusmod\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								},
								"description": "Delete the users by username."
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"consectetur ad Ut aute\",\n  \"Duis dolor mollit\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "user was not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"consectetur ad Ut aute\",\n  \"Duis dolor mollit\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "store or get data from database failed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"consectetur ad Ut aute\",\n  \"Duis dolor mollit\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "User login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"id\",\n  \"username\": \"cillum labore ut pr\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						},
						"description": "User login\nrequired: username, password"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"id\",\n  \"username\": \"cillum labore ut pr\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"id\",\n  \"username\": \"cillum labore ut pr\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User logout",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						},
						"description": "User logout"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List roles information.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"role"
							]
						},
						"description": "List roles information."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"role"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "role was not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"role"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "store or get data from database failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"role"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Data source connection test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"config\": {},\n  \"type\": \"non sint \"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"test"
							]
						},
						"description": "Test source\nrequired: config, type"
					},
					"response": [
						{
							"name": "data source connection test successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {},\n  \"type\": \"non sint \"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"test"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "data source connection test failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {},\n  \"type\": \"non sint \"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"test"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "store or get data from database failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {},\n  \"type\": \"non sint \"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Refresh Token",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/token/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"token",
								"refresh"
							]
						},
						"description": "Refresh Token"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/token/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"token",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/token/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"token",
										"refresh"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://172.21.73.37:8000",
			"type": "string"
		}
	]
}